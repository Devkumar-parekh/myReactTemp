[{"E:\\React\\28feb2023\\axiosapp\\src\\index.js":"1","E:\\React\\28feb2023\\axiosapp\\src\\About.js":"2","E:\\React\\28feb2023\\axiosapp\\src\\NoPage.jsx":"3","E:\\React\\28feb2023\\axiosapp\\src\\AxiosPage.jsx":"4","E:\\React\\28feb2023\\axiosapp\\src\\Home.jsx":"5","E:\\React\\28feb2023\\axiosapp\\src\\NavBar.js":"6","E:\\React\\28feb2023\\axiosapp\\src\\Gallery.jsx":"7","E:\\React\\28feb2023\\axiosapp\\src\\User.jsx":"8"},{"size":1144,"mtime":1677736015351,"results":"9","hashOfConfig":"10"},{"size":831,"mtime":1677735657796,"results":"11","hashOfConfig":"10"},{"size":380,"mtime":1677734981622,"results":"12","hashOfConfig":"10"},{"size":838,"mtime":1677653232986,"results":"13","hashOfConfig":"10"},{"size":4276,"mtime":1677668297436,"results":"14","hashOfConfig":"10"},{"size":2050,"mtime":1677676025317,"results":"15","hashOfConfig":"10"},{"size":2739,"mtime":1677664666681,"results":"16","hashOfConfig":"10"},{"size":1154,"mtime":1677735080349,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1928r5a",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\React\\28feb2023\\axiosapp\\src\\index.js",[],[],"E:\\React\\28feb2023\\axiosapp\\src\\About.js",[],[],"E:\\React\\28feb2023\\axiosapp\\src\\NoPage.jsx",[],[],"E:\\React\\28feb2023\\axiosapp\\src\\AxiosPage.jsx",[],[],[],"E:\\React\\28feb2023\\axiosapp\\src\\Home.jsx",[],[],"E:\\React\\28feb2023\\axiosapp\\src\\NavBar.js",["45"],[],"import { useState } from \"react\";\nimport { NavLink, Outlet } from \"react-router-dom\";\n\nconst MyNav = (props) => {\n  return (\n    <>\n      <li className=\"nav-item\">\n        <NavLink className={`nav-link ${props.mycolor}`} to='/'>Home</NavLink>\n      </li>\n      <li className=\"nav-item\">\n        <NavLink className={`nav-link ${props.mycolor}`} to='/gallery'>Gallery</NavLink>\n      </li>\n      <li className=\"nav-item\">\n        <NavLink className={`nav-link ${props.mycolor}`} to='/user'>User Page</NavLink>\n      </li>\n      <li className=\"nav-item\">\n        <NavLink className={`nav-link ${props.mycolor}`} to='/axiospage'>AxiosPage</NavLink>\n      </li>\n      <li className=\"nav-item\">\n        <NavLink className={`nav-link ${props.mycolor}`} to='/about'>About</NavLink>\n      </li>\n    </>\n  );\n}\n\n\nfunction NavBar() {\n  const [searchIp, setSearchIp] = useState();\n\n  const updateSearchip = (e) => {\n    setSearchIp(e.target.value);\n  }\n  return (\n    <>\n    <div className=\"container fs-5\">\n        <nav className=\"my-5 row d-flex align-items-center\">\n          <a className=\"col-sm-2 navbar-brand \" href=\"#\">\n            <img src=\"https://picsum.photos/200/100\" alt=\"Avatar Logo\" className=\"thumbnail rounded-pill img-fluid\"/> \n          </a>\n          <ul className=\"col-sm-8\">\n            <div className=\"row g-2\">\n              <ul className=\"col-sm-12 nav nav-tabs nav-justified\">\n                <MyNav mycolor=''/>\n              </ul>\n            </div>\n          </ul>\n          <div className=\"col-sm-2\">\n            <input className=\"w-100\" type='text' name=\"serachbar\" placeholder=\"Search...\" value={searchIp} onChange={updateSearchip} />\n          </div>\n        </nav>\n    </div>\n      <div className=\"fs-4 font-monospace\">\n        <img src={searchIp} alt=\"\"/>\n        \n      <Outlet />\n      </div>\n      \n      <footer className=\"bg-dark  fs-5\">\n        <ul className=\" navbar nav nav-pills nav-justified p-5 mt-5\">\n          <MyNav mycolor='text-light'/>\n        </ul>\n      </footer>\n    </>\n    \n  );\n}\n\nexport default NavBar;\n","E:\\React\\28feb2023\\axiosapp\\src\\Gallery.jsx",["46"],[],"import { useEffect, useState } from \"react\";\r\n\r\nfunction Gallery(props) {\r\n  const [mydata, setmydata] = useState([]);\r\n  const [page, setpage] = useState(1);\r\n  const [pageIp, setPageip] = useState(1);\r\n  document.title = props.name;\r\n  const GetImg = async () => {\r\n    const res = await fetch(`https://picsum.photos/v2/list?page=${page}&limit=100`);\r\n    const actualData = await res.json();\r\n    // console.log(actualData);\r\n    setmydata(actualData);\r\n    \r\n  }\r\n  useEffect(() => { GetImg() },[page]);\r\n  const prev = () => {\r\n    let temp = page>1? (page - 1) : 1;\r\n    setpage(temp);\r\n    GetImg();\r\n  }\r\n  const next = () => {\r\n    let temp = page + 1;\r\n    setpage(temp);\r\n  }\r\n  const gotopage = () => {\r\n    setpage(pageIp);\r\n  }\r\n  const updateIp = (e) => {\r\n    setPageip(e.target.value);\r\n  }\r\n  return (\r\n    <div className=\"Gallery container\">\r\n      <div className=\"d-flex justify-content-between m-5\">\r\n        <button onClick={prev} className=\"btn-dark btn\">⏮️</button>\r\n        <div className=\"row\">\r\n          <span className='col float-end'>{ page}</span><input  className='form-control col' type='number' onChange={updateIp} value={pageIp}/><button onClick={gotopage} className='col btn btn-primary'>Go To page</button>\r\n        </div>\r\n        <button onClick={next} className=\"btn-dark btn\">⏭️</button>\r\n      </div>\r\n      <div className=\"row g-2\">\r\n        {/* <ShowData/> */}\r\n        {\r\n          mydata.map((val) => {\r\n            console.log(val.download_url);\r\n            return (\r\n              <>\r\n                <div className=\"col-sm-4\" style={{ backgroundColor: \"lavender\" }}>\r\n                    <img className=\"img-fluid\" src={val.download_url} alt=\"\"/>\r\n                </div>\r\n              </>\r\n            );\r\n            \r\n          })\r\n        }\r\n        {/* <div className=\"col-sm-4\" style={{ backgroundColor: \"lavender\" }}>\r\n            <img className=\"img-fluid\" src=\"https://picsum.photos/800\" alt=\"\"/>\r\n        </div>\r\n        <div className=\"col-sm-4\" style={{ backgroundColor: \"lavender\" }}>\r\n            <img className=\"img-fluid\" src=\"https://picsum.photos/800\" alt=\"\"/>\r\n        </div>\r\n        <div className=\"col-sm-4\" style={{ backgroundColor: \"lavender\" }}>\r\n            <img className=\"img-fluid\" src=\"https://picsum.photos/800\" alt=\"\"/>\r\n        </div>\r\n        <div className=\"col-sm-4\" style={{ backgroundColor: \"lavender\" }}>\r\n            <img className=\"img-fluid\" src=\"https://picsum.photos/800\" alt=\"\"/>\r\n        </div>\r\n        <div className=\"col-sm-4\" style={{ backgroundColor: \"lavender\" }}>\r\n            <img className=\"img-fluid\" src=\"https://picsum.photos/800\" alt=\"\"/>\r\n        </div> */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Gallery;\r\n","E:\\React\\28feb2023\\axiosapp\\src\\User.jsx",["47","48","49"],[],{"ruleId":"50","severity":1,"message":"51","line":37,"column":11,"nodeType":"52","endLine":37,"endColumn":58},{"ruleId":"53","severity":1,"message":"54","line":15,"column":32,"nodeType":"55","endLine":15,"endColumn":38,"suggestions":"56"},{"ruleId":"57","severity":1,"message":"58","line":11,"column":11,"nodeType":"59","messageId":"60","endLine":11,"endColumn":19},{"ruleId":"61","severity":1,"message":"62","line":19,"column":21,"nodeType":"52","endLine":19,"endColumn":102},{"ruleId":"50","severity":1,"message":"51","line":23,"column":25,"nodeType":"52","endLine":23,"endColumn":65},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'GetImg'. Either include it or remove the dependency array.","ArrayExpression",["63"],"no-unused-vars","'navigate' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.",{"desc":"64","fix":"65"},"Update the dependencies array to be: [GetImg, page]",{"range":"66","text":"67"},[499,505],"[GetImg, page]"]